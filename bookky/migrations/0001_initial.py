# Generated by Django 4.0.3 on 2022-03-24 23:11

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnyCommunity',
            fields=[
                ('APID', models.BigAutoField(primary_key=True, serialize=False)),
                ('contents', models.TextField(verbose_name='내용')),
                ('postImage', models.CharField(max_length=255, null=True)),
                ('createAt', models.DateField(auto_now=True)),
                ('updateAt', models.DateField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('like', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=10000000)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('BID', models.BigAutoField(primary_key=True, serialize=False)),
                ('TITLE', models.CharField(max_length=255)),
                ('SUBTITLE', models.CharField(max_length=255, null=True)),
                ('AUTHOR', models.CharField(blank=True, max_length=100, null=True)),
                ('ISBN', models.CharField(blank=True, max_length=30, null=True)),
                ('PUBLISHER', models.CharField(blank=True, max_length=255, null=True)),
                ('PRICE', models.CharField(max_length=30, null=True)),
                ('PAGE', models.CharField(max_length=20, null=True)),
                ('thumbnail', models.CharField(max_length=255, null=True)),
                ('BOOK_INDEX', models.TextField(blank=True, null=True, verbose_name='목차')),
                ('BOOK_INTRODUCTION', models.TextField(blank=True, null=True, verbose_name='소개')),
                ('PUBLISH_DATE', models.CharField(max_length=30, null=True)),
                ('TAG', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), null=True, size=50)),
                ('RATING', models.FloatField(default=2.5)),
                ('Allah_BID', models.CharField(max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('TID', models.BigAutoField(primary_key=True, serialize=False)),
                ('nameTag', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('UID', models.BigAutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100)),
                ('pwToken', models.CharField(max_length=255)),
                ('nickname', models.CharField(default='북아무개', max_length=10)),
                ('thumbnail', models.CharField(max_length=255, null=True)),
                ('tag_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), null=True, size=50)),
                ('pushNoti', models.BooleanField(default=False)),
                ('pushToken', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('RID', models.BigAutoField(primary_key=True, serialize=False)),
                ('contents', models.TextField(verbose_name='내용')),
                ('views', models.IntegerField(default=0)),
                ('createAt', models.DateField(auto_now=True)),
                ('updateAt', models.DateField(null=True)),
                ('like', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=10000000)),
                ('BID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.book')),
                ('UID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.user')),
            ],
        ),
        migrations.CreateModel(
            name='RefreshTokenStorage',
            fields=[
                ('RTID', models.BigAutoField(primary_key=True, serialize=False)),
                ('refresh_token', models.CharField(max_length=255)),
                ('UID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.user')),
            ],
        ),
        migrations.CreateModel(
            name='QnACommunity',
            fields=[
                ('QPID', models.BigAutoField(primary_key=True, serialize=False)),
                ('contents', models.TextField(verbose_name='내용')),
                ('postImage', models.CharField(max_length=255, null=True)),
                ('createAt', models.DateField(auto_now=True)),
                ('updateAt', models.DateField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('like', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=10000000)),
                ('BID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bookky.book')),
                ('UID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.user')),
            ],
        ),
        migrations.CreateModel(
            name='QnAComment',
            fields=[
                ('QCID', models.BigAutoField(primary_key=True, serialize=False)),
                ('parentID', models.IntegerField(default=0)),
                ('comment', models.TextField(verbose_name='내용')),
                ('createAt', models.DateField(auto_now=True)),
                ('updateAt', models.DateField(null=True)),
                ('like', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=10000000)),
                ('QPID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.qnacommunity')),
                ('UID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.user')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('NID', models.BigAutoField(primary_key=True, serialize=False)),
                ('contents', models.CharField(max_length=50, null=True)),
                ('createAt', models.DateField(auto_now=True)),
                ('UID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.user')),
            ],
        ),
        migrations.CreateModel(
            name='MarketCommunity',
            fields=[
                ('MPID', models.BigAutoField(primary_key=True, serialize=False)),
                ('contents', models.TextField(verbose_name='내용')),
                ('postImage', models.CharField(max_length=255, null=True)),
                ('createAt', models.DateField(auto_now=True)),
                ('updateAt', models.DateField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('like', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=10000000)),
                ('BID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bookky.book')),
                ('UID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.user')),
            ],
        ),
        migrations.CreateModel(
            name='MarketComment',
            fields=[
                ('MCID', models.BigAutoField(primary_key=True, serialize=False)),
                ('parentID', models.IntegerField(default=0)),
                ('comment', models.TextField(verbose_name='내용')),
                ('createAt', models.DateField(auto_now=True)),
                ('updateAt', models.DateField(null=True)),
                ('like', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=10000000)),
                ('MPID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.marketcommunity')),
                ('UID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.user')),
            ],
        ),
        migrations.CreateModel(
            name='HotCommunity',
            fields=[
                ('HPID', models.BigAutoField(primary_key=True, serialize=False)),
                ('APID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bookky.anycommunity')),
                ('MPID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bookky.marketcommunity')),
                ('QPID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bookky.qnacommunity')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteBook',
            fields=[
                ('FID', models.BigAutoField(primary_key=True, serialize=False)),
                ('BID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.book')),
                ('UID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.user')),
            ],
        ),
        migrations.AddField(
            model_name='anycommunity',
            name='BID',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bookky.book'),
        ),
        migrations.AddField(
            model_name='anycommunity',
            name='UID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.user'),
        ),
        migrations.CreateModel(
            name='AnyComment',
            fields=[
                ('ACID', models.BigAutoField(primary_key=True, serialize=False)),
                ('parentID', models.IntegerField(default=0)),
                ('comment', models.TextField(verbose_name='내용')),
                ('createAt', models.DateField(auto_now=True)),
                ('updateAt', models.DateField(null=True)),
                ('like', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=10000000)),
                ('APID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.anycommunity')),
                ('UID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookky.user')),
            ],
        ),
    ]
